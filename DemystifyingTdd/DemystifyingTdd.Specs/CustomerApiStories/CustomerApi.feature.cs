// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.0.0.0
//      SpecFlow Generator Version:3.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace DemystifyingTdd.Specs.CustomerApiStories
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class CustomerApiFeature : Xunit.IClassFixture<CustomerApiFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "CustomerApi.feature"
#line hidden
        
        public CustomerApiFeature(CustomerApiFeature.FixtureData fixtureData, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CustomerApi", "\tAs an api user\r\n\tIn order to interact with customer data\r\n\tI want an api to expo" +
                    "se the customer data", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute(DisplayName="Get Customer")]
        [Xunit.TraitAttribute("FeatureTitle", "CustomerApi")]
        [Xunit.TraitAttribute("Description", "Get Customer")]
        public virtual void GetCustomer()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get Customer", null, ((string[])(null)));
#line 6
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "FirstName",
                        "LastName",
                        "Address",
                        "City",
                        "State",
                        "ZipCode",
                        "FavoriteColor"});
            table2.AddRow(new string[] {
                        "John",
                        "Doe",
                        "513 4th S Dr.",
                        "Omaha",
                        "NE",
                        "55555",
                        "Pink"});
            table2.AddRow(new string[] {
                        "Jane",
                        "Doe",
                        "513 4th S Dr.",
                        "Omaha",
                        "NE",
                        "55555",
                        "Green"});
            table2.AddRow(new string[] {
                        "Felicia",
                        "Esmeralda",
                        "123 Unicorn Dr.",
                        "Wayne",
                        "KS",
                        "78945",
                        "Black"});
            table2.AddRow(new string[] {
                        "Oberon",
                        "Dane",
                        "445 West Park",
                        "Moon",
                        "WA",
                        "13268",
                        "Brown"});
            table2.AddRow(new string[] {
                        "Hermia",
                        "Amarillo",
                        "9812 Reinke",
                        "Neward",
                        "PA",
                        "64512",
                        "Blue"});
#line 7
 testRunner.Given("I have the following customer data", ((string)(null)), table2, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Customer",
                        "Title"});
            table3.AddRow(new string[] {
                        "John Doe",
                        "Wall Street Journal"});
            table3.AddRow(new string[] {
                        "John Doe",
                        "New York Times"});
            table3.AddRow(new string[] {
                        "Oberon Dane",
                        "Home and Garden"});
            table3.AddRow(new string[] {
                        "Hermia Amarillo",
                        "Unicorns Anonymous"});
            table3.AddRow(new string[] {
                        "Hermia Amarillo",
                        "MSDN"});
            table3.AddRow(new string[] {
                        "Hermia Amarillo",
                        "Washington Journal"});
#line 14
 testRunner.And("the following subscriptions", ((string)(null)), table3, "And ");
#line 22
 testRunner.And("a customers url of \"/api/customers\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
 testRunner.When("I request the customer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
 testRunner.Then("Ok status code is returned", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 25
 testRunner.And("the customer data is returned", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.0.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                CustomerApiFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                CustomerApiFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
